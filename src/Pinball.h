#ifndef PINBALL_PINBALL
#define PINBALL_PINBALL

#include "AnglesLiterals.h"
#include "Attachment.h"
#include "AttachmentColorBlendingMode.h"
#include "Camera.h"
#include "CommandBuffer.h"
#include "CommandBufferPool.h"
#include "DepthImage.h"
#include "DepthStencil.h"
#include "DescriptorSet.h"
#include "DescriptorSetPool.h"
#include "Drawer.h"
#include "DynamicSet.h"
#include "DynamicState.h"
#include "Fence.h"
#include "Field.h"
#include "FieldFunctions.h"
#include "Foundations.h"
#include "Framebuffer.h"
#include "Hitbox.h"
#include "Image.h"
#include "ImageView.h"
#include "IndexBuffer.h"
#include "InputAssembly.h"
#include "Instance.h"
#include "LogicalDevice.h"
#include "Model.h"
#include "Multisampler.h"
#include "PhysicalDevice.h"
#include "PipelineColorBlendingModes.h"
#include "Pipeline.h"
#include "PipelineLayout.h"
#include "Queue.h"
#include "Rasterizer.h"
#include "RenderPass.h"
#include "Semaphore.h"
#include "Set.h"
#include "Shader.h"
#include "StaticSet.h"
#include "Subpass.h"
#include "Swapchain.h"
#include "SwapchainCapabilities.h"
#include "SwapchainPresentMode.h"
#include "SwapchainSurfaceFormat.h"
#include "UniformBuffer.h"
#include "Universe.h"
#include "VertexBuffer.h"
#include "VertexInput.h"
#include "Viewport.h"
#include "VulkanException.h"
#include "Window.h"
#include "WindowSurface.h"

//how a vertex is made
using MyVertex = Vulkan::PipelineOptions::Vertex<glm::vec3, glm::vec3, glm::vec2>;

#endif
